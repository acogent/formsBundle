{% extends sgn_forms_template %}

{% block stylesheets %}
    {{ parent() }}
    <link rel='stylesheet'  href="{{ asset('bundles/sgnforms/css/jquery-ui-1.10.0.custom.css') }}" />
    <link rel='stylesheet'  href="{{ asset('bundles/sgnforms/css/div-wait.css') }}">
    <style>
    .ui-jqgrid .ui-pg-input {
        font-size: 14px;
        height: 20px;
        margin: 0;
        width: 50px;
    }

    .ui-jqgrid .ui-jqgrid-view {
        font-size: 14px;
    }
    .ui-jqgrid-sortable {
        height: 100%;
    }

    .nav-pills
    {
        margin-top: 5px;
    }
    .hb_inner {
        position: absolute;
        top: 20px;
        right: 15px;
        padding: 15px !important;
        width: 520px !important;
    }

    .table > thead > tr > th {
        vertical-align: middle;
    }


    #grid_container2 table>tbody>tr>td[role="gridcell"] {
        padding: 0px;
        padding-left: 8px;
    }
    #grid_container2 input {
        height: 25px;
        background-color: #F9F9F9;
    }
    </style>
{% endblock stylesheets %}

{% set bundle = "" %}
{% block header_banner_inner %}
    <div class="hb_inner">
        <div class="btn-group btn-group">

        </div>
        <br/>
          <div class="btn-group btn-group-sm">
           {% for bestof in bestof_entity %}
             {% if bestof  != entity %}
                <a href="{{ path('sgn_forms_formscrud_show_2', { table: bestof  }) }}" role="button" class="btn btn-info"><span class="glyphicon glyphicon-paperclip"></span> {{ bestof|raw }}</a>
               {% endif %}
            {% endfor %}
        </div>
    </div>
{% endblock %}


{% block content %}
    <div class="loading-big" id='loading-big' style="display:none">Loading&#8230;</div>
    <div class="row" id='idRow'>

    {% set id = null%}
    <div class="panel panel-primary" id="grid_container2">
        <div class="panel-heading" style="height:50px;">
            <div class="panel-title" style='float: left;'>{{ entity }}</div>
             {% if  entities  is defined and entities|length > 0  %}
                <select id="e1"  onchange="location = this.options[this.selectedIndex].value;" style="margin-top: -2px; float: right; margin-right:15px; min-width: 200px;">
                    <option></option>
                    {% for entit in entities %}
                        <option value="{{ entit.link }}" >{{ entit.name}}</a></option>
                    {% endfor %}
                </select>
            {% endif %}
        </div>
        <div id="result_panel" class="panel-body">
            <table  id="list-grid"></table>
            <div id="grid-nav"></div>
        </div>
    </div>
    <br>

     {% if  collectionNames  is defined %}

      <div class="btn-group">
        <button  role="button" class="btn btn-primary btn-md" onclick="showHide('related-grids');" ><span class="glyphicon glyphicon-list-alt"></span> {% trans %}Related datas{% endtrans %}</button>
        <button id= 'btn-show'   role="button" class="btn btn-primary btn-md" onclick="showHide('show');"><span class="glyphicon glyphicon-eye-open"> </span> {% trans %}Show{% endtrans %}</a>
        <button id= 'btn-edit'   role="button" class="btn btn-warning btn-md" onclick="showHide('edit');"><span class="glyphicon glyphicon-edit"></span> {% trans %}Edit{% endtrans %}</button>
        <button id= 'btn-create' role="button" class="btn btn-warning btn-md" onclick="showHide('new');"><span class="glyphicon glyphicon-plus"></span> {% trans %}New{% endtrans %}</button>
        <button id= 'btn-delete' role="button" class="btn btn-danger  btn-md" onclick="showHide('delete');"> <span class="glyphicon glyphicon-remove"></span> {% trans %}Delete{% endtrans %}</button>
     </div>

    <div id="myTabContent" class="tab-content" >
        <div class = "tab-pane" id="related-grids" style="display:none;">
            <h2>{{ entity|trans }} : <span class='selectedEntityId'></span></h2>
            {% for collection , attributs  in collectionNames %}
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title" id="panel-title">{{collection}}</h3>
                    </div>
                    <div id="result_panel-{{collection}}" class="panel-body">
                        <div id="related-grid-{{collection}}" ></div>
                    </div>
                    {% if attributs.collections is defined and attributs.collections is not empty %}
                        <div class="btn-group">
                            <button id= 'btn-annexe' role="button" class="btn btn-primary btn-md" onclick="showHideSub('{{ collection }}');" ><span class="glyphicon glyphicon-list-alt"></span> {% trans %}Related datas{% endtrans %}</button>
                        </div>
                        <div class="panel-body" id="related-grids-{{ collection }}" style="display:none;">
                        {% for subcollection, subattributs in attributs.collections %}
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">{{ subcollection }}</h4>
                                </div>
                                <div id="related-grid-{{ collection }}-{{ subcollection }}" ></div>
                            </div>
                        {% endfor %}
                        </div>
                    {% endif %}
                </div>
             {% endfor %}
        </div>
        <div class = "tab-pane" id="show" style="display:none;"><h2>{{ entity }} : <span class='selectedEntityId'></span></h2>
            <div id="showEntity">
                Vous devez effectuer une selection pour pouvoir l'afficher.
            </div>
        </div>
        <div class = "tab-pane" id="edit" style="display:none;"><h2>{{ entity }} : <span class='selectedEntityId'></span></h2>
            <div id="editEntity">
                Vous devez effectuer une selection pour pouvoir l'éditer.
            </div>
        </div>
        <div class = "tab-pane" id="new" style="display:none;"><h2>{{ entity }} : </h2>
            <div id="newEntity">
                {% if route_exists('/admin/'~entity~'/new/') %}
                    {{ render(controller( entity~':new')) }}
                {% else %}
                    {{ render(controller('SGNFormsBundle:FormsCRUD:new', { 'table': entity, 'ajax':''  })) }}
                {% endif %}
            </div>
         </div>
        <div class = "tab-pane" id="delete" style="display:none;"><h2>{{ entity }} : <span class='selectedEntityId'></span></h2>
            <div id="deleteEntity">
                Vous devez effectuer une selection pour pouvoir la supprimer.
            </div>
        </div>
    </div>
    {% endif %}
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script >

    $.jgrid.defaults.responsive = true;
    $.jgrid.defaults.styleUI = 'Bootstrap';

    function showHide(id) {
        jQuery("#show").hide();
        jQuery("#edit").hide();
        jQuery("#new").hide();
        jQuery("#delete").hide();
        jQuery("#related-grids").hide();

        jQuery("#"+id).show();
    }

    function showHideSub(id) {
        var sel_id = $("#list-grid-"+id).getGridParam('selrow');
        $("#related-grids-"+id).toggle(0, function(){
            if ($(this).is(":visible") && sel_id == null) {
                var rowArray = jQuery("#list-grid-"+id).jqGrid('getDataIDs');

                jQuery("#list-grid-"+id).jqGrid('setSelection', rowArray[0], true);
            }
        });
    }

    function ajaxFormRequest(form, ajax) {
        var formName = form.action.indexOf("/edit/") > 0 ? '#editEntity' : '#newEntity';
        // On empêche le comportement par défaut du navigateur, c-à-d de soumettre le formulaire :
        $(formName).submit(function(e) {
            e.preventDefault();
        });

        $.ajax({
            type: "POST",
            url:  form.action + ajax,
            data: $(form).serialize()
        })
        .done(function(result){
            if (result.indexOf('<form') == 0 || ajax == 'dynamic') {
                // Le formulaire modifié dynamiquement ou avec des erreurs de validation :
                jQuery(formName).html(result);
            } else {
                // L’objet a été modifié ou inséré, on redirige :
                window.location.replace(result);
            }
        })
        .fail(function(result) {
            console.log (form.action + ajax);
            // alert( "error" );
            // jQuery(formName).html(result);
        })
    }

    jQuery(window).bind('resize', function() {
        // Get width of parent container
        var width = jQuery("#grid_container2").width();
        if (width == null || width < 1) {
            // For IE, revert to offsetWidth if necessary
            width = jQuery("#grid_container2").attr('offsetWidth');
        }
        width = width - 2; // Fudge factor to prevent horizontal scrollbars
        if (width > 0 && Math.abs(width - jQuery("#list-grid").width()) > 5)         {
            $("#list-grid").setGridWidth(width);
        }
    }).trigger('resize');

    var last_selected = null;
    var last_loaded   = null;
    var wait = "<div class='loading-big'  style='display:block'>Loading&#8230;</div>";

    $(document).ready(function() {
        $('#e1').select2({ placeholder: 'Choisissez une table ...' });
        $.jgrid.styleUI.Bootstrap.base.rowTable = "table table-bordered table-striped";

        var url = window.location.search;
        myURL = "{{ url(
                        'sgn_forms_formscrud_show',
                        {
                            'format' : 'json' ,
                            'table'  : entity,
                            'params' : params
                        } ) }}" + url.substring(url.lastIndexOf("?"));
        var width = $('#grid_container2').width()-30;

        $('#list-grid').jqGrid({
                autowidth   : true,
                height      : 'auto',
                shrinkToFit : false,
                mtype       : 'GET',
                url         : myURL,
                datatype    : "json",
                viewrecords : true,
                jsonReader  : {
                repeatitems : false
                },
                colModel    : {{ columnModel|raw   }} ,
                rowNum      : {{ limit }},
                rowList     : {{ rowsList }},
                pager       : "#grid-nav",
                sortname    : 'id',
                viewrecords : true,
                gridview    : true,
                sortorder   : 'asc',
                caption     : '',
                onSelectRow : relatedGridsReload
        });

        $('#list-grid').jqGrid('bindKeys');

        $('.ui-jqgrid-sortable').css('height', '100%');
        $('.ui-jqgrid-sortable').css('font-size', '16px');

        function relatedGridsReload(sel_id) {
            if (sel_id != last_loaded) {
                jQuery('#editEntity').html(wait);
                jQuery('#showEntity').html(wait);
                jQuery('#deletEntity').html(wait);

                myUrl = "{{ url_edit }}";
                myUrl = myUrl.replace('%23', sel_id); // %23 = #

                $.ajax( { url: myUrl , dataType : "html" , cache  : false})
                    .done(function(data) {
                        console.log( data);
                        jQuery('#editEntity').html( data );
                    })
                    .fail(function(e, data) {
                        // alert( "error "+myUrl );
                        console.log (e);
                    })
                    .always(function() {
                    // alert( "complete" );
                    });

                myUrl = "{{ url_showone }}";
                myUrl = myUrl.replace('%23', sel_id); // %23 = #
                $.ajax( { url: myUrl , dataType : "html" , cache  : false})
                    .done(function(data) {
                        // console.log( data);
                        jQuery('#showEntity').html( data );
                    })
                    .fail(function(e, data) {
                        // alert( "error "+myUrl );
                        console.log (e);
                    })
                    .always(function() {
                        // alert( "complete" );
                    });

                myUrl = "{{ url_delete }}";
                myUrl = myUrl.replace('%23', sel_id); // %23 = #
                $.ajax( { url: myUrl , dataType : "html" , cache  : false})
                    .done(function(data) {
                        jQuery('#deleteEntity').html( data );
                    })
                    .fail(function(e, data) {
                        // alert( "error "+myUrl );
                        console.log (e);
                    })
                    .always(function() {
                        // alert( "complete" );
                    });

                jQuery(".selectedEntityId").text(getSelectedEntityId);

                 {% for collection, attributs in collectionNames %}
                    jQuery("#list-grid-{{ collection }}" ).clearGridData();
                    {% if attributs.collections is defined and attributs.collections is not empty %}
                        {% for subcollection, subattributs in attributs.collections %}
                            jQuery("#list-grid-{{ collection }}-{{ subcollection }}").clearGridData();
                        {% endfor %}
                    {% endif %}
                {% endfor %}

            }

            if (jQuery("#related-grids").is(":visible") || sel_id == last_loaded ) {
                {% for collection, attributs in collectionNames %}
                    jQuery("#list-grid-{{ collection }}" ).clearGridData();
                    jQuery("#list-grid-{{ collection }}").trigger('reloadGrid');
                    {% if attributs.collections is defined and attributs.collections is not empty %}
                        {% for subcollection, subattributs in attributs.collections %}
                            jQuery("#list-grid-{{ collection }}-{{ subcollection }}").clearGridData();
                        {% endfor %}
                    {% endif %}
                {% endfor %}

                {% for collection, attributs in collectionNames %}
                    // console.log ("{{collection}}");
                    myUrl = "{{ attributs.url }}";
                    myUrl = myUrl.replace('%23', sel_id); // %23 = #
                    $.ajax( { url: myUrl , dataType : "html" , cache  : false})
                        .done(function(data) {
                            $('#related-grid-{{collection}}').append(data);
                        })
                        .fail(function(e, data) {
                            // alert( "error "+myUrl );
                            console.log (e);
                        })
                        .always(function() {
                            // alert( "complete" );
                        });
                {% endfor %}
            }
            last_loaded   = sel_id;
            last_selected = sel_id;

        }

        function getSelectedEntityId() {
            var sel_id = jQuery("#list-grid").getGridParam('selrow');
            if (last_loaded) jQuery("#list-grid tr#" + last_loaded + " td").css('font-weight', 'normal');
            jQuery("#list-grid tr#" + sel_id + " td").css('font-weight', 'bold');
            var id = jQuery("#list-grid").getCell(sel_id, 'id');

            return id;
        }

        function hideResearch() {
            if (jQuery("#searchmodfbox_list-grid")) {
                jQuery("#searchmodfbox_list-grid a.ui-jqdialog-titlebar-close").click();
            }
        }

        $("#list-grid").navGrid ("#grid-nav",
            {
                view   : false,
                add    : false,
                edit   : false,
                del    : false,
                search : true,
                align  : "left"
            },
            { } //edit options
        );

        $("#list-grid").jqGrid("filterToolbar", {
            defaultSearch: "cn"
        });

        $("#list-grid").setCell(1);
     });

</script>
{% endblock %}
